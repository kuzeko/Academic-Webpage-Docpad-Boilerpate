// == == == == == == == == == == == == == == == == == == == == == == == == == */
//   Grids + Sass generated by Gridset: https://gridsetapp.com
//
//   Variables Needed:
//
     $s-max : 320 !default;
     $m-max : 800 !default;
     $l-max : 1024 !default;
//
//   Information about your grids and measurements
//   to use in your own Sass functions.
//
// == == == == == == == == == == == == == == == == == == == == == == == == == */

$gs-prefixes: xs, s, m, l;


// == == == == == == == == == == == == == == == == == == == == == == == == == */
//   Mixins
//
// * gs-media(prefix, type)
//
//   This will generate the appropriate media query for a particular grid.
//   (Sass versions 3.2+ only)
//
//   Valid types: min, max, min-max
//   *min* will output a media query for the lowest width the grid applies,
//   *max* will output a media query for the maximum width a grid applies,
//   and *min-max* will use both (bookending the query).
//
//   Default fallback to *min*
//
// == == == == == == == == == == == == == == == == == == == == == == == == == */


@mixin gs-media($prefix, $type: false){

  @if $prefix == l {
    @media only screen and (min-width: ($l-max/16)*1em) {
      @content;
    }
  }

  @if $prefix == m {
    @if ($type == min) {
      @media only screen and (min-width: ($m-max/16)*1em) {
        @content;
      }
    }

    @else if ($type == max) {
      @media only screen and (max-width: (($l-max -1)/16)*1em) {
        @content;
      }
    }

    @else if ($type == min-max) {
      @media only screen and (min-width: ($m-max/16)*1em) and (max-width: (($l-max -1)/16)*1em) {
        @content;
      }
    }

    @else {
      @media only screen and (min-width: ($m-max/16)*1em) {
        @content;
      }
    }
  }

  @if $prefix == s {
    @if ($type == min) {
      @media only screen and (min-width: ($s-max/16)*1em) {
        @content;
      }
    }

    @else if ($type == max) {
      @media only screen and (max-width: (($m-max -1)/16)*1em) {
        @content;
      }
    }

    @else if ($type == min-max) {
      @media only screen and (min-width: ($s-max/16)*1em) and (max-width: (($m-max -1)/16)*1em) {
        @content;
      }
    }

    @else {
      @media only screen and (min-width: ($s-max/16)*1em) {
        @content;
      }
    }
  }


  @if $prefix == xs {
    @media only screen and (max-width: (($s-max -1)/16)*1em) {
      @content;
    }
  }
}
