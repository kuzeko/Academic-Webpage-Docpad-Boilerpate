// == == == == == == == == == == == == == == == == == == == == == == == == == */
// Grid
// http://responsablecss.com/grid
//
// Set up responsive grid system.
//
// This is heavily infleuenced by the Semantic Grid http://semantic.gs
//
// Variables Needed:
//
//  - $columns
//  - $gutter_width
//
//
// @author Abban Dunne http://abandon.ie
// @author James Wilson http://jimmynotjim.com
// @version 1.1
//
// == == == == == == == == == == == == == == == == == == == == == == == == == */
//
// Clearfix: contain floats
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    `contenteditable` attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that receive the `container` class.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// == == == == == == == == == == == == == == == == == == == == == == == == == */
@mixin clearfix(){
    /*
     * For IE 6/7 only
     * Include this rule to trigger hasLayout and contain floats.
     */
    *zoom: 1;

    &:before,
    &:after {
        content: " "; /* 1 */
        display: table; /* 2 */
    }

    &:after {
        clear: both;
    }
}

// Utility variable â€” you should never need to modify this
$gridsystem_width: $columns * 1px;
$padding:$gutter_width*0.5;
//$correction: 0.5 / $max_width * 100 * 1%; // NOTE: Check this in IE

// Ensure grid columns are set to border-boxes.
// This is essential
// Should be already defined in your main style
// so here we comment
@mixin border-box(){
  // -webkit-box-sizing: border-box;
  //    -moz-box-sizing: border-box;
  //         box-sizing: border-box;
}

// Our row container
@mixin row($padding:0){
  @include clearfix();
  @include border-box();

  display:block;
  max-width: $max_width;
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;

}

// Our column container
@mixin column($x, $padding:$padding, $columns:$columns){
  @include border-box();

  display: inline;
  float: left;
  width: 100%*($x / $columns);
  padding-left: $padding;
  padding-right: $padding;

  //IE 6 & 7 Fix
  //*width: 100%*(($x / $gridsystem_width)-$correction);
  //*padding: 0 ($padding)-$correction;
}

// Push adds left padding
@mixin push($offset:1, $columns:$columns) {
  margin-left: 100%*($offset / $columns);
}

// Pull adds right padding
@mixin pull($offset:1, $columns:$columns) {
  margin-right: 100%*($offset / $columns);
}